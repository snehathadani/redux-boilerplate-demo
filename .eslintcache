[{"C:\\Users\\rohit\\Sneha\\redux-boilerplate-demo\\src\\index.js":"1","C:\\Users\\rohit\\Sneha\\redux-boilerplate-demo\\src\\App.js":"2","C:\\Users\\rohit\\Sneha\\redux-boilerplate-demo\\src\\reportWebVitals.js":"3","C:\\Users\\rohit\\Sneha\\redux-boilerplate-demo\\src\\components\\Posts.js":"4","C:\\Users\\rohit\\Sneha\\redux-boilerplate-demo\\src\\components\\PostForm.js":"5"},{"size":500,"mtime":1609836314005,"results":"6","hashOfConfig":"7"},{"size":438,"mtime":1611099245610,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1609836314005,"results":"9","hashOfConfig":"7"},{"size":753,"mtime":1611088153116,"results":"10","hashOfConfig":"7"},{"size":1723,"mtime":1611098594288,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vi7u1h",{"filePath":"14","messages":"15","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"21"},"C:\\Users\\rohit\\Sneha\\redux-boilerplate-demo\\src\\index.js",[],"C:\\Users\\rohit\\Sneha\\redux-boilerplate-demo\\src\\App.js",["25"],"C:\\Users\\rohit\\Sneha\\redux-boilerplate-demo\\src\\reportWebVitals.js",[],"C:\\Users\\rohit\\Sneha\\redux-boilerplate-demo\\src\\components\\Posts.js",["26"],"import React, {useEffect, useState, Fragment} from \"react\"\r\nimport axios from \"axios\";\r\nexport default function Posts (){\r\n\r\n    const [initialPosts, setPosts] = useState([])\r\n    useEffect(()=> {\r\n        const fetchData = async()=> {\r\n            const result = await axios(\r\n                'https://jsonplaceholder.typicode.com/posts',\r\n            )\r\n        setPosts(result.data)\r\n        }\r\n        fetchData();\r\n    }, [])\r\n\r\n    return(\r\n        \r\n        <div>\r\n            <h1>Posts</h1>\r\n        {initialPosts.map(e=> {\r\n            return(\r\n                <ul>\r\n                <li key = {e.userId}>{e.title}</li>\r\n                <p>{e.body}</p>\r\n                </ul>\r\n            )\r\n        })}\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\n\r\n",["27","28"],"C:\\Users\\rohit\\Sneha\\redux-boilerplate-demo\\src\\components\\PostForm.js",["29","30"],"import React, {useState} from \"react\"\r\nimport { Provider } from \"react-redux\"\r\n\r\nexport default function PostForm (){\r\n    const [obody, setBody] = useState({body:'', title:''})\r\n    const onChange = (e)=> {\r\n        setBody({[e.target.name]:e.target.value})\r\n\r\n        const post = {\r\n            title: obody.title,\r\n            body: obody.body\r\n        }\r\n    \r\n    }\r\n    const onSubmit = (e)=> {\r\n        e.preventDefault();\r\n\r\n        const post = {\r\n            title: obody.title,\r\n            body: obody.body\r\n        }\r\n\r\n        fetch('https://jsonplaceholder.typicode.com/posts', {\r\n            method: 'POST',\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(post)\r\n        })\r\n        .then(res=> res.json())\r\n        .then(data=> console.log(data));\r\n    }\r\n    return(\r\n        <Provider store ={store}>\r\n        <div>\r\n            <h1>\r\n                Add Posts\r\n            </h1>\r\n            <form onSubmit= {onSubmit}>\r\n                <div>\r\n                <label> Title: </label> <br/>\r\n                <input type = \"text\"\r\n                       name = 'title' \r\n                       value = {obody.title}\r\n                       onChange ={onChange}\r\n                        />\r\n                </div>\r\n                <div>\r\n                    <label> Body: </label> <br/>\r\n                    <textarea name = \"body\"\r\n                              value ={obody.body}\r\n                              onChange ={onChange}\r\n                              />\r\n                </div>\r\n                <button type = \"submit\">Submit</button>\r\n                </form>\r\n        </div>\r\n        </Provider>\r\n    )\r\n}\r\n\r\n\r\n",{"ruleId":null,"fatal":true,"severity":2,"message":"31","line":9,"column":7},{"ruleId":"32","severity":1,"message":"33","line":1,"column":37,"nodeType":"34","messageId":"35","endLine":1,"endColumn":45},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"32","severity":1,"message":"40","line":9,"column":15,"nodeType":"34","messageId":"35","endLine":9,"endColumn":19},{"ruleId":"41","severity":2,"message":"42","line":34,"column":27,"nodeType":"34","messageId":"43","endLine":34,"endColumn":32},"Parsing error: Identifier 'store' has already been declared\n\n\u001b[0m \u001b[90m  7 | \u001b[39m\u001b[36mimport\u001b[39m store from \u001b[32m'./store'\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m  8 | \u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  9 | \u001b[39m\u001b[36mconst\u001b[39m store \u001b[33m=\u001b[39m createStore(()\u001b[33m=>\u001b[39m []\u001b[33m,\u001b[39m {}\u001b[33m,\u001b[39m applyMiddleware)\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 10 | \u001b[39m\u001b[36mfunction\u001b[39m \u001b[33mApp\u001b[39m() {\u001b[0m\n\u001b[0m \u001b[90m 11 | \u001b[39m  \u001b[36mreturn\u001b[39m (\u001b[0m\n\u001b[0m \u001b[90m 12 | \u001b[39m    \u001b[33m<\u001b[39m\u001b[33mdiv\u001b[39m className\u001b[33m=\u001b[39m\u001b[32m\"App\"\u001b[39m\u001b[33m>\u001b[39m\u001b[0m","no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","no-native-reassign",["44"],"no-negated-in-lhs",["45"],"'post' is assigned a value but never used.","no-undef","'store' is not defined.","undef","no-global-assign","no-unsafe-negation"]